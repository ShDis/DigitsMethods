#Дана задача Коши
#{ y' = f(x,y)
#{ y(a) = y0
#где функция f(x,y), отрезок [a,b], начальное значение y0
#
#n = 9
#
#Решите задачу Коши по формулам Рунге-кутты

# Определение функции f(x, y)
def f(x,y):
    return -(1+x*y)/(x*x)

def runge_kutta(a, b, y0, h):
    # Функция решения задачи Коши методом Рунге-Кутты
    # a, b - начальный и конечный моменты времени
    # y0 - начальное значение y(a)
    # h - шаг интегрирования
    
    # Вычисляем количество итераций
    n = int((b - a) / h)
    
    # Создаем список для хранения результатов
    x = [a]  # Список значений x
    y = [y0]  # Список значений y
    
    # Цикл по итерациям метода
    for i in range(n):
        xi = x[-1] # Берем последнее значение x
        yi = y[-1] # Берем последнее значение y
        
        k1 = h * f(xi, yi) # Производная функции y в точке (xi, yi), умноженная на шаг интегрирования h.
        k2 = h * f(xi + h/2, yi + k1/2) # Производная функции y в точке (xi + h/2, yi + k1/2), умноженная на шаг интегрирования h.
        k3 = h * f(xi + h/2, yi + k2/2) # Производная функции y в точке (xi + h/2, yi + k2/2), умноженная на шаг интегрирования h.
        k4 = h * f(xi + h, yi + k3) # Производная функции y в точке (xi + h, yi + k3), умноженная на шаг интегрирования h.
        
        y_next = yi + 1/6 * (k1 + 2*k2 + 2*k3 + k4) # Вычисляем следующее значение y
        x_next = xi + h # Вычисляем следующее значение x
        
        x.append(x_next) # Добавляем x_next в список x
        y.append(y_next) # Добавляем y_next в список y
        
    return x, y

# Исходные данные
a = 1
b = 2
y0 = 1
h = 0.1  # Шаг

# Решение задачи Коши
x, y = runge_kutta(a, b, y0, h)

# Вывод результатов
print("x\t\ty(x)")
for i in range(len(y)):
    print("{:.1f}\t\t{:.6f}".format(x[i], y[i]))