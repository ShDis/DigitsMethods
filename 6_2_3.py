#Дана задача Коши
#{ y' = f(x,y)
#{ y(a) = y0
#где функция f(x,y), отрезок [a,b], начальное значение y0
#
#n = 9
#
#Решите задачу Коши модифицированным методом Эйлера
#Модифицированный метод Эйлера (метод Хойна): 
#Использует линейную экстраполяцию производной в начале и конце интервала шага для более точного приближения к истинному значению функции.

# Определение функции f(x, y)
def f(x,y):
    return -(1+x*y)/(x*x)

def hoyns_method(f, a, b, y0, h):
    """
    Метод Хойна (модифицированный метод Эйлера) для решения задачи Коши.

    Параметры:
        - f: функция правой части дифференциального уравнения, принимающая два аргумента (x, y)
        - a: начальное значение x
        - b: конечное значение x
        - y0: начальное значение y
        - h: шаг интегрирования

    Возвращает:
        - x: список значений x
        - y: список значений y
    """
    x = [a]
    y = [y0]
    while x[-1] < b:
        # Вычисление производной в начальной точке
        f0 = f(x[-1], y[-1])
        # Вычисление промежуточного значения y в середине интервала
        y_intermediate = y[-1] + h * f0
        # Вычисление производной в середине интервала
        f_intermediate = f(x[-1] + h / 2, y_intermediate)
        # Обновление значения y с использованием экстраполяции производной
        y_new = y[-1] + h * f_intermediate
        # Обновление значения x
        x.append(x[-1] + h)
        # Обновление значения y
        y.append(y_new)
    return x, y

# Исходные данные
a = 1
b = 2
y0 = 1
h = 0.1  # Шаг

# Решение задачи Коши модифицированным методом Эйлера
x, y = hoyns_method(f, a, b, y0, h)

# Вывод результатов
print("x\t\ty(x)")
for i in range(len(y)):
    print("{:.1f}\t\t{:.6f}".format(x[i], y[i]))